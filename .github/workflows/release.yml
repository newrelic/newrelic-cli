name: Release

on: [push, pull_request]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x

      - name: Add GOBIN to PATH
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Needed for release notes
          fetch-depth: 0

      - name: Install PGP private key
        shell: bash
        env:
          PGP_PRIVATE_KEY: ${{ secrets.PGP_PRIVATE_KEY }}
        run: echo "$PGP_PRIVATE_KEY" | gpg --batch --import

      - name: Publish Release
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.DEV_TOOLKIT_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
        run: make release-publish

      - uses: actions/upload-artifact@v2
        with:
          name: windows-binary
          path: dist/newrelic_windows_amd64/newrelic.exe


  release-windows-installer:
    runs-on: windows-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - uses: actions/download-artifact@v2
        with:
          name: windows-binary
          path: .\dist\newrelic_windows_amd64

      - name: Compile installer
        run: msbuild .\build\package\msi\NewRelicCLIInstaller.sln

      - name: Sign installer
        env:
          PFX_PASSWORD: ${{ secrets.PFX_PASSWORD }}
        working-directory: .\build\package\msi\NewRelicCLIInstaller
        run: .\SignMSI.cmd

      - name: Get latest release upload URL
        id: get-latest-release-upload-url
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "::set-output name=upload_url::$(./scripts/get_latest_release_upload_url.sh)"

      - name: Upload Windows installer
        id: upload-windows-installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get-latest-release-upload-url.outputs.upload_url }}
          asset_path: .\build\package\msi\NewRelicCLIInstaller\bin\x64\Release\NewRelicCLIInstaller.msi
          asset_name: NewRelicCLIInstaller.msi
          asset_content_type: application/octet-stream
