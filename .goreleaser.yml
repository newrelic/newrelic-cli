project_name: newrelic-cli

before:
  hooks:
    - go mod download

builds:
  - id: newrelic
    dir: cmd/newrelic
    binary: newrelic
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
      - arm
    goarm:
      - 7
    ignore: # go-ole is currently 32-bit only.  Remove this when support is added
      - goos: windows
        goarch: arm
        goarm: 7
      - goos: windows
        goarch: arm64

    ldflags:
      - -s -w -X main.version={{.Version}} -X main.appName={{.Binary}}
        -X github.com/newrelic/newrelic-cli/internal/cli.version={{.Version}}

release:
  name_template: "{{.ProjectName}} v{{.Version}}"

archives:
  - id: "default"
    builds:
      - newrelic
    format_overrides:
      - goos: windows
        format: zip
    files:
      - CHANGELOG.md
      - LICENSE
      - README.md

signs:
  - artifacts: all
    args:
      [
        "-u",
        # GPG Key ID Updated on 29 April 2025 - Expires 27 April 2027
        "4F9A9B5B96EC30B9",
        # When the Key ID here is updated, it has to be paired with an update
        # to the PGP_PRIVATE_KEY attribute consumed by GitHub Workflows
        "--output",
        "${signature}",
        "--detach-sign",
        "${artifact}",
      ]

dockers:
  - dockerfile: build/package/Dockerfile
    image_templates:
      - "newrelic/cli:{{ .Tag }}-amd64"
      - "newrelic/cli:v{{ .Major }}.{{ .Minor }}-amd64"
      - "newrelic/cli:latest-amd64"
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=repository=http://github.com/newrelic/newrelic-cli"
      - "--label=homepage=https://developer.newrelic.com/"
      - "--label=maintainer=Developer Toolkit <opensource@newrelic.com>"
      - "--platform=linux/amd64"
    goarch: amd64
  - dockerfile: build/package/Dockerfile
    image_templates:
      - "newrelic/cli:{{ .Tag }}-arm64"
      - "newrelic/cli:v{{ .Major }}.{{ .Minor }}-arm64"
      - "newrelic/cli:latest-arm64"
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=repository=http://github.com/newrelic/newrelic-cli"
      - "--label=homepage=https://developer.newrelic.com/"
      - "--label=maintainer=Developer Toolkit <opensource@newrelic.com>"
      - "--platform=linux/arm64"
    goarch: arm64

docker_manifests:
  - name_template: "newrelic/cli:{{ .Tag }}"
    image_templates:
      - "newrelic/cli:{{ .Tag }}-amd64"
      - "newrelic/cli:{{ .Tag }}-arm64"
  - name_template: "newrelic/cli:v{{ .Major }}.{{ .Minor }}"
    image_templates:
      - "newrelic/cli:v{{ .Major }}.{{ .Minor }}-amd64"
      - "newrelic/cli:v{{ .Major }}.{{ .Minor }}-arm64"
  - name_template: "newrelic/cli:latest"
    image_templates:
      - "newrelic/cli:latest-amd64"
      - "newrelic/cli:latest-arm64"

# Uses git-chglog output from release flow
changelog:
  skip: false

# snapcrafts:
#   - id: newrelic
#     builds:
#       - newrelic
#     name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
#     replacements:
#       darwin: Darwin
#       linux: Linux
#       windows: Windows
#       386: i386
#       amd64: x86_64
#     name: newrelic-cli
#     publish: true
#     summary: A project to consolidate some tools New Relic offers for managing resources.
#     description: |
#       The New Relic CLI is an officially supported command line interface for New
#       Relic, released as part of the Developer Toolkit.

#     # A guardrail to prevent you from releasing a snap to all your users before
#     # it is ready.
#     # `devel` will let you release only to the `edge` and `beta` channels in the
#     # store. `stable` will let you release also to the `candidate` and `stable`
#     # channels. More info about channels here:
#     # https://snapcraft.io/docs/reference/channels
#     grade: stable
#     confinement: strict
#     license: Apache-2.0
#     base: core18
#     apps:
#       # The name of the app must be the same name as the binary built or the snapcraft name.
#       newrelic:
#         # If your app requires extra permissions to work outside of its default
#         # confined space, declare them here.
#         # You can read the documentation about the available plugs and the
#         # things they allow:
#         # https://snapcraft.io/docs/reference/interfaces.
#         plugs: ["home", "network"]

scoops:
  - repository:
      owner: newrelic
      name: newrelic-cli
    commit_author:
      name: nr-developer-toolkit
      email: developer-toolkit@newrelic.com
    commit_msg_template: "chore(scoop): update for {{ .ProjectName }} version {{ .Tag }}"
    homepage: https://github.com/newrelic/newrelic-cli
    url_template: "https://github.com/newrelic/newrelic-cli/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    description: |
      The New Relic CLI is an officially supported command line interface for New
      Relic, released as part of the Developer Toolkit.
    license: Apache-2.0

nfpms:
  - id: newrelic
    package_name: newrelic-cli
    file_name_template: >-
      {{- .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end -}}
    builds:
      - newrelic
    vendor: New Relic
    homepage: https://github.com/newrelic/newrelic-cli
    maintainer: opensource@newrelic.com
    description: |
      The New Relic CLI is an officially supported command line interface for New
      Relic, released as part of the Developer Toolkit.
    license: Apache 2.0
    formats:
      - deb
      - rpm
    bindir: /usr/local/bin
    epoch: 1
    release: 1
